name: Build and Push Container Images

on:
  push:
    tags: ['v*']
    branches: ['main']
  release:
    types: [published]
  pull_request:
    branches: ['main']

env:
  REGISTRY_GHCR: ghcr.io
  REGISTRY_DOCKERHUB: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        dockerfile: 
          - path: "Dockerfile"
            suffix: ""
          - path: "Dockerfile.production" 
            suffix: "-prod"
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY_DOCKERHUB }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY_GHCR }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY_DOCKERHUB }}/rolfedh/asciidoc-dita-toolkit${{ matrix.dockerfile.suffix }}
          ${{ env.REGISTRY_GHCR }}/rolfedh/asciidoc-dita-toolkit${{ matrix.dockerfile.suffix }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=AsciiDoc DITA Toolkit${{ matrix.dockerfile.suffix }}
          org.opencontainers.image.description=CLI tools for processing AsciiDoc files for DITA publishing workflows
          org.opencontainers.image.vendor=Rolfe Dlugy-Hegwer
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./${{ matrix.dockerfile.path }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test container image
      if: matrix.dockerfile.path == 'Dockerfile.production'
      run: |
        # Test the built image
        docker run --rm ${{ env.REGISTRY_GHCR }}/rolfedh/asciidoc-dita-toolkit${{ matrix.dockerfile.suffix }}:latest --version || true
        docker run --rm ${{ env.REGISTRY_GHCR }}/rolfedh/asciidoc-dita-toolkit${{ matrix.dockerfile.suffix }}:latest --help
