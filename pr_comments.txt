author:	copilot-pull-request-reviewer
association:	contributor
edited:	false
status:	commented
--
## Pull Request Overview

This PR breaks out `file_utils.py` into focused modules to enforce single responsibility and maintain backward compatibility.

- Introduced six new utility modules (`cli_utils`, `security_utils`, `config_utils`, `plugin_manager`, `user_interface`, `workflow_utils`)  
- Updated existing plugins (`DirectoryConfig`, `ContentType`) to use the new modules  
- Retained legacy APIs in `file_utils.py` via a deprecation layer

### Reviewed Changes

Copilot reviewed 9 out of 9 changed files in this pull request and generated no comments.

<details>
<summary>Show a summary per file</summary>

| File                                                       | Description                                                                                  |
|------------------------------------------------------------|----------------------------------------------------------------------------------------------|
| workflow_utils.py                                          | Added high-level orchestration for `.adoc` processing                                        |
| user_interface.py                                          | Extracted interactive and non-interactive config prompts                                     |
| security_utils.py                                          | Isolated directory path sanitization and validation                                          |
| plugins/DirectoryConfig.py                                 | Moved directory-config loading/filter logic into plugin module                               |
| plugins/ContentType.py                                     | Updated imports to new `cli_utils`, `workflow_utils`, and `plugin_manager` modules           |
| plugin_manager.py                                          | New central plugin enable/disable logic                                                      |
| file_utils.py                                              | Reduced to core file operations; added backward compatibility layer                          |
| config_utils.py                                            | New generic JSON config load/save/validation functions                                       |
| cli_utils.py                                               | New common CLI argument parser                                                               |
</details>



<details>
<summary>Comments suppressed due to low confidence (2)</summary>

**asciidoc_dita_toolkit/asciidoc_dita/plugins/DirectoryConfig.py:313**
* The function `apply_directory_filters` uses the `os` module (e.g., `os.getcwd()`, `os.path.join`) but `os` is not imported in this file. Add `import os` at the top of the module.
```
    repo_root = config.get("repoRoot", os.getcwd())
```
**asciidoc_dita_toolkit/asciidoc_dita/plugins/DirectoryConfig.py:359**
* The function `get_filtered_adoc_files` references `os.path.exists`, `os.path.abspath`, and other `os` operations but the `os` module is not imported. Ensure `import os` is included at the top of the file.
```
def get_filtered_adoc_files(directory_path, config, find_adoc_files_func=None):
```
</details>


--
author:	copilot-pull-request-reviewer
association:	contributor
edited:	false
status:	commented
--
## Pull Request Overview

This PR refactors `file_utils.py` into focused modules to enforce separation of concerns and maintain backward compatibility.

- Extract core functionalities into six new modules (`cli_utils`, `security_utils`, `config_utils`, `plugin_manager`, `user_interface`, `workflow_utils`)
- Update existing plugins (`DirectoryConfig`, `ContentType`) and tests to use new modules
- Add a backward‐compatibility layer in `file_utils.py` with deprecation warnings

### Reviewed Changes

Copilot reviewed 10 out of 10 changed files in this pull request and generated 6 comments.

<details>
<summary>Show a summary per file</summary>

| File                                      | Description                                                         |
|-------------------------------------------|---------------------------------------------------------------------|
| tests/test_DirectoryConfig.py             | Updated imports and logger patching to use `config_utils` & `plugin_manager` |
| asciidoc_dita_toolkit/asciidoc_dita/cli_utils.py      | New CLI argument parsing utilities                                  |
| asciidoc_dita_toolkit/asciidoc_dita/config_utils.py   | New generic JSON config load/save and validation utilities          |
| asciidoc_dita_toolkit/asciidoc_dita/security_utils.py | New path sanitization and validation for security                   |
| asciidoc_dita_toolkit/asciidoc_dita/user_interface.py | New interactive user prompt utilities                               |
| asciidoc_dita_toolkit/asciidoc_dita/workflow_utils.py | New high‐level AsciiDoc processing orchestration                    |
| asciidoc_dita_toolkit/asciidoc_dita/plugin_manager.py | New plugin enablement checks                                       |
| asciidoc_dita_toolkit/asciidoc_dita/plugins/DirectoryConfig.py | Modular compatibility functions and moved security/config calls      |
| asciidoc_dita_toolkit/asciidoc_dita/plugins/ContentType.py    | Updated imports to use new `cli_utils`, `plugin_manager`, `workflow_utils` |
| asciidoc_dita_toolkit/asciidoc_dita/file_utils.py            | Reduced to core file ops and added deprecated compatibility layer   |
</details>



<details>
<summary>Comments suppressed due to low confidence (1)</summary>

**asciidoc_dita_toolkit/asciidoc_dita/plugin_manager.py:12**
* The docstring states all plugins are enabled by default, but the code disables `DirectoryConfig` and `ContentType` unless environment flags are set. Please update the docstring to reflect this behavior.
```
    Check if a plugin is enabled. For now, all plugins are enabled by default.
```
</details>


--
